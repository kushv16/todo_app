{"version":3,"sources":["firebase.js","components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","inputText","setInputText","setStatus","todos","setTodos","type","value","className","onChange","e","target","onClick","preventDefault","collection","add","task","completed","timestamp","FieldValue","serverTimestamp","name","Todo","todo","doc","id","update","delete","Todolist","filter","map","App","useState","status","setFilter","useEffect","orderBy","onSnapshot","snapshot","docs","data","item","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636b4f1b.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDxXU8NSpdSWPyKEKY0TJoY6DGKyfuojgo\",\r\n  authDomain: \"todo-app-4bead.firebaseapp.com\",\r\n  projectId: \"todo-app-4bead\",\r\n  storageBucket: \"todo-app-4bead.appspot.com\",\r\n  messagingSenderId: \"829877192018\",\r\n  appId: \"1:829877192018:web:a2e3db63dc82dc4687668b\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db","import React,{useState} from \"react\"\r\nimport db from \"../firebase\";\r\nimport firebase from 'firebase'\r\nfunction Form({inputText,setInputText,todos,setTodos,setStatus})\r\n{\r\n    function inputTextHandler(e)\r\n    {\r\n        setInputText(\r\n            e.target.value\r\n        )\r\n    }\r\n\r\n    function submitHandler(e)\r\n    {\r\n        e.preventDefault()\r\n        db.collection('todos').add({\r\n            task:inputText,\r\n            completed:false,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        // setTodos([\r\n        //     ...todos,\r\n        //     {text:inputText,completed:false,id:Math.random()*1000}\r\n        // ]);\r\n        setInputText(\"\")\r\n    }\r\n\r\n    function statusHandler(e)\r\n    {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <form>\r\n                <input type=\"text\" value={inputText} className=\"todo-input\" onChange={inputTextHandler}/>\r\n                <button type=\"submit\" className=\"todo-button\" onClick={submitHandler}><i className=\"far fa-plus-square\"></i></button>\r\n                <div className=\"select\">\r\n                    <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                      <option value=\"all\">All</option>\r\n                      <option value=\"completed\">Completed</option>\r\n                      <option value=\"uncompleted\">Uncompleted</option>\r\n                    </select>\r\n                  </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React , {useState} from \"react\"\r\nimport db from \"../firebase\"\r\nimport Todolist from \"./Todolist\"\r\n\r\nfunction Todo({setTodos,todos,todo})\r\n{\r\n  \r\n    function completeBtnHandler(e)\r\n    {\r\n        db.collection('todos').doc(todo.id).update({\r\n            completed : !todo.completed  \r\n        })\r\n\r\n        // db.collection('todos').doc(todo.id).set({\r\n        //     completed : !todo.completed  \r\n        // },{merge : true})\r\n\r\n        // setTodos(todos.map(item =>\r\n        //     {\r\n        //         if(item.id === todo.id){\r\n        //             return{\r\n        //                 ...item,\r\n        //                 completed : !todo.completed\r\n        //             }\r\n        //     }\r\n        //     return item\r\n        // }\r\n        // ))\r\n    }\r\n\r\n    function deleteBtnHandler(e)\r\n    {\r\n        db.collection('todos').doc(todo.id).delete()\r\n        // setTodos(todos.filter( item=> item.id !== todo.id\r\n        // ))\r\n    }\r\n\r\n    return(\r\n        <div className=\"list-container\">\r\n            <li className={`list-item ${todo.completed?\"completed\":\"\"}`}>{todo.task}</li>\r\n            <button className=\"complete-btn\" onClick = {completeBtnHandler}><i className=\"fas fa-check\"></i></button>\r\n            <button className=\"trash-btn\" onClick = {deleteBtnHandler}><i className=\"fas fa-trash\"></i></button>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Todo","import React from \"react\"\r\nimport Todo from \"./Todo\"\r\n\r\nfunction Todolist({setTodos,todos,filter})\r\n{\r\n    return(\r\n \r\n    <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n        {filter.map(todo =>(\r\n            <Todo setTodos = {setTodos} todos={todos} todo={todo}/>\r\n            ))}\r\n        </ul>    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Todolist","import './App.css';\nimport Form from \"./components/Form\"\nimport Todolist from \"./components/Todolist\"\nimport React ,{useState,useEffect} from \"react\"\nimport db from \"./firebase\"\n\nfunction App() {\n  let [inputText,setInputText] = useState(\"\")\n  let [todos,setTodos] = useState([])\n  let [status,setStatus] = useState(\"all\")\n  let [filter,setFilter] = useState([])\n\n  useEffect(() => {\n      db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n        setTodos(snapshot.docs.map(doc => ({ id:doc.id ,completed : doc.data().completed , task: doc.data().task})))\n    })\n  },[])\n\n  function filterHandler()\n  {\n    switch(status){\n      case 'completed':\n        setFilter(todos.filter(item => item.completed === true))\n        break\n      case 'uncompleted':\n        setFilter(todos.filter(item => item.completed === false))\n        break\n      default:\n        setFilter(todos)\n    } \n  }\n\n  useEffect(() =>\n    {filterHandler()},[status,todos]\n  )\n\n  return (\n    <div className=\"App\">\n        <header>To-do App</header>\n        <Form filter={filter} setFilter={setFilter}setStatus={setStatus} inputText = {inputText} setInputText = {setInputText} todos={todos} setTodos={setTodos}/>\n        <Todolist filter={filter}setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}